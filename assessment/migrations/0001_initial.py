# Generated by Django 4.2.8 on 2024-07-04 06:03

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=150, unique=True
                    ),
                ),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=255
                    ),
                ),
                (
                    "codename",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=128
                    ),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                (
                    "username",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=150, unique=True
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=150
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=150
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=254
                    ),
                ),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                (
                    "object_id",
                    models.TextField(
                        blank=True, db_collation="Korean_Wansung_CI_AS", null=True
                    ),
                ),
                (
                    "object_repr",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=200
                    ),
                ),
                ("action_flag", models.SmallIntegerField()),
                (
                    "change_message",
                    models.TextField(db_collation="Korean_Wansung_CI_AS"),
                ),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app_label",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "app",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=255
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=255
                    ),
                ),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_data", models.TextField(db_collation="Korean_Wansung_CI_AS")),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationComm",
            fields=[
                (
                    "code",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=50
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=1000
                    ),
                ),
                (
                    "p_code",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("sort_no", models.IntegerField()),
                (
                    "note",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=500,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_COMM",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationLearnMedia",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                (
                    "category_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "group_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "item_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=200
                    ),
                ),
                (
                    "ref_files",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "media_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=1000
                    ),
                ),
                ("order_by", models.IntegerField()),
                (
                    "descriptions",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "category_icon_src",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=200,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_LEARN_MEDIA",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationManager",
            fields=[
                (
                    "user_id",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_name",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "dept_cd",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "dept_name",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_executive", models.BooleanField()),
                ("is_used", models.BooleanField()),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_bim_team", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_MANAGER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationQuestion",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("subject_id", models.IntegerField()),
                (
                    "test_group",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "subcategory",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=2000
                    ),
                ),
                (
                    "related_function",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "document_link",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "video_link",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=2000,
                        null=True,
                    ),
                ),
                ("issue_on", models.DateTimeField()),
                ("modified_on", models.DateTimeField(blank=True, null=True)),
                ("is_used", models.BooleanField()),
                (
                    "modified_by",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "question_group",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("current_choice_group_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_QUESTION",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationQuestionChoiceItem",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("question_id", models.IntegerField()),
                (
                    "content",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=2000,
                        null=True,
                    ),
                ),
                ("is_correct", models.BooleanField()),
                (
                    "created_by",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                ("created_on", models.DateTimeField(blank=True, null=True)),
                ("is_used", models.BooleanField()),
                ("order_by", models.IntegerField(blank=True, null=True)),
                ("choice_group_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_QUESTION_CHOICE_ITEM",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationQuestionMedia",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("question_id", models.IntegerField()),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=10
                    ),
                ),
                ("file_id", models.IntegerField()),
                (
                    "created_by",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        null=True,
                    ),
                ),
                ("order_by", models.IntegerField()),
                ("is_used", models.BooleanField()),
                ("created_on", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_QUESTION_MEDIA",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationQuestionWeight",
            fields=[
                ("question_id", models.IntegerField(primary_key=True, serialize=False)),
                ("correct_answer_rate", models.FloatField(blank=True, null=True)),
                ("incorrect_answer_rate", models.FloatField(blank=True, null=True)),
                ("average_solution_time", models.FloatField(blank=True, null=True)),
                ("weighted_coefficient", models.FloatField(blank=True, null=True)),
                ("adjusted_score", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_QUESTION_WEIGHT",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationResultVerification",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("subject_id", models.IntegerField(blank=True, null=True)),
                ("test_id", models.IntegerField(blank=True, null=True)),
                (
                    "user_id",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                (
                    "result_type",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=4),
                ),
                (
                    "verification_key",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=128,
                        null=True,
                    ),
                ),
                ("created_on", models.DateTimeField()),
                ("verification_expires_on", models.DateTimeField()),
                ("is_canceled", models.BooleanField()),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_RESULT_VERIFICATION",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationSubject",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                ("test_minutes", models.IntegerField()),
                ("question_count", models.IntegerField()),
                ("reference_file", models.IntegerField(blank=True, null=True)),
                ("is_used", models.BooleanField()),
                ("created_on", models.DateTimeField()),
                (
                    "created_by",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                (
                    "modified_by",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        null=True,
                    ),
                ),
                ("modified_on", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_SUBJECT",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationSubjectNote",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("subject_id", models.IntegerField()),
                (
                    "note",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=2000
                    ),
                ),
                ("order_by", models.IntegerField()),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_SUBJECT_NOTE",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationSubjectQuestionCount",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("subject_id", models.IntegerField()),
                (
                    "category",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "question_group",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                ("question_count", models.IntegerField()),
                ("order_by", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_SUBJECT_QUESTION_COUNT",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationTest",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "test_type",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("subject_id", models.IntegerField()),
                ("test_datetime", models.DateTimeField()),
                ("max_participants", models.IntegerField()),
                ("registration_start_date", models.DateField()),
                ("registration_end_date", models.DateField()),
                ("is_opened", models.BooleanField()),
                ("is_generated_question", models.BooleanField()),
                ("result_open_on", models.DateTimeField()),
                ("created_on", models.DateTimeField()),
                (
                    "created_by",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                ("is_used", models.BooleanField()),
                ("modified_on", models.DateTimeField(blank=True, null=True)),
                (
                    "modified_by",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        null=True,
                    ),
                ),
                ("is_result_open", models.BooleanField()),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_TEST",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationTestUser",
            fields=[
                ("test_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "user_id",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                ("registration_datetime", models.DateTimeField()),
                ("start_datetime", models.DateTimeField(blank=True, null=True)),
                ("end_datetime", models.DateTimeField(blank=True, null=True)),
                ("period_second", models.IntegerField()),
                ("is_submitted", models.BooleanField()),
                ("submitted_on", models.DateTimeField(blank=True, null=True)),
                (
                    "registration_by",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "verification_key",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=128,
                        null=True,
                    ),
                ),
                ("start_count", models.IntegerField()),
                ("submit_count", models.IntegerField()),
                ("is_observer", models.BooleanField()),
                ("is_canceled", models.BooleanField(blank=True, null=True)),
                ("is_exception", models.BooleanField()),
                ("is_exclude_analysis", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_TEST_USER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationTestUserChoose",
            fields=[
                (
                    "user_id",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=8,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("test_id", models.IntegerField()),
                ("question_id", models.IntegerField()),
                ("choice_id", models.IntegerField()),
                ("choose_datetime", models.DateTimeField()),
                ("choose_count", models.IntegerField()),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_TEST_USER_CHOOSE",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationTestUserQuestion",
            fields=[
                ("test_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "user_id",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
                ("question_id", models.IntegerField()),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=2000,
                        null=True,
                    ),
                ),
                ("created_on", models.DateTimeField(blank=True, null=True)),
                (
                    "question_group",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("order_by", models.IntegerField(blank=True, null=True)),
                ("choice_group_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_TEST_USER_QUESTION",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbBimCertificationTestUserSummary",
            fields=[
                (
                    "user_id",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("test_id", models.IntegerField()),
                ("subject_id", models.IntegerField()),
                ("period_sec", models.IntegerField()),
                ("org_total_score", models.FloatField()),
                ("weighted_total_score", models.FloatField(blank=True, null=True)),
                (
                    "org_grade",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "mod_grade",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "analysis_item",
                    models.TextField(
                        blank=True, db_collation="Korean_Wansung_CI_AS", null=True
                    ),
                ),
                ("is_used", models.BooleanField(blank=True, null=True)),
                ("is_exclude_counting", models.BooleanField(blank=True, null=True)),
                ("avg_weighted_coefficient", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_BIM_CERTIFICATION_TEST_USER_SUMMARY",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbFile",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                (
                    "file_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=500
                    ),
                ),
                (
                    "file_guid",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "file_hash",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=4000
                    ),
                ),
                (
                    "file_version",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("file_size", models.FloatField(blank=True, null=True)),
                ("created_on", models.DateTimeField(blank=True, null=True)),
                (
                    "file_relative_url",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("is_directory", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "TB_FILE",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbFileLog",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                ("file_id", models.IntegerField()),
                (
                    "user_id",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=20
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=10
                    ),
                ),
                ("access_on", models.DateTimeField()),
                (
                    "message",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=500,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "TB_FILE_LOG",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TbImageFile",
            fields=[
                ("seq", models.AutoField(primary_key=True, serialize=False)),
                (
                    "file_name",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=500
                    ),
                ),
                (
                    "file_guid",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=100
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=4000
                    ),
                ),
                ("file_size", models.FloatField(blank=True, null=True)),
                (
                    "image_size",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "image_relative_url",
                    models.CharField(
                        db_collation="Korean_Wansung_CI_AS", max_length=1000
                    ),
                ),
                (
                    "image72_relative_url",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "image150_relative_url",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "image500_relative_url",
                    models.CharField(
                        blank=True,
                        db_collation="Korean_Wansung_CI_AS",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("created_on", models.DateTimeField()),
                (
                    "created_by",
                    models.CharField(db_collation="Korean_Wansung_CI_AS", max_length=8),
                ),
            ],
            options={
                "db_table": "TB_IMAGE_FILE",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VBaseDept",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept_cd", models.CharField(db_column="DEPT_CD", max_length=20)),
                ("dept_nm", models.CharField(db_column="DEPT_NM", max_length=100)),
                (
                    "dept_sort",
                    models.CharField(
                        blank=True, db_column="DEPT_SORT", max_length=10, null=True
                    ),
                ),
                (
                    "parent_cd",
                    models.CharField(
                        blank=True, db_column="PARENT_CD", max_length=20, null=True
                    ),
                ),
                (
                    "parent_nm",
                    models.CharField(
                        blank=True, db_column="PARENT_NM", max_length=100, null=True
                    ),
                ),
                (
                    "com_cd",
                    models.CharField(
                        blank=True, db_column="COM_CD", max_length=20, null=True
                    ),
                ),
            ],
            options={
                "db_table": "V_BASE_DEPT",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VBaseUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(db_column="USER_ID", max_length=20)),
                (
                    "emp_no",
                    models.CharField(
                        blank=True, db_column="EMP_NO", max_length=20, null=True
                    ),
                ),
                ("user_nm", models.CharField(db_column="USER_NM", max_length=50)),
                (
                    "user_e_nm",
                    models.CharField(
                        blank=True, db_column="USER_E_NM", max_length=100, null=True
                    ),
                ),
                (
                    "user_c_nm",
                    models.CharField(
                        blank=True, db_column="USER_C_NM", max_length=50, null=True
                    ),
                ),
                (
                    "user_nicknm",
                    models.CharField(
                        blank=True, db_column="USER_NICKNM", max_length=100, null=True
                    ),
                ),
                (
                    "ty_retire",
                    models.CharField(
                        blank=True, db_column="TY_RETIRE", max_length=2, null=True
                    ),
                ),
                (
                    "user_sex",
                    models.CharField(
                        blank=True, db_column="USER_SEX", max_length=1, null=True
                    ),
                ),
                (
                    "user_birthday_fg",
                    models.CharField(
                        blank=True,
                        db_column="USER_BIRTHDAY_FG",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "user_birthday",
                    models.CharField(
                        blank=True, db_column="USER_BIRTHDAY", max_length=10, null=True
                    ),
                ),
                (
                    "user_anniversary_fg",
                    models.CharField(
                        blank=True,
                        db_column="USER_ANNIVERSARY_FG",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "user_anniversary",
                    models.CharField(
                        blank=True,
                        db_column="USER_ANNIVERSARY",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "user_fg",
                    models.CharField(
                        blank=True, db_column="USER_FG", max_length=10, null=True
                    ),
                ),
                (
                    "wf_pwd",
                    models.CharField(
                        blank=True, db_column="WF_PWD", max_length=100, null=True
                    ),
                ),
                (
                    "res_no",
                    models.CharField(
                        blank=True, db_column="RES_NO", max_length=20, null=True
                    ),
                ),
                (
                    "mail",
                    models.CharField(
                        blank=True, db_column="MAIL", max_length=100, null=True
                    ),
                ),
                (
                    "ex_mail",
                    models.CharField(
                        blank=True, db_column="EX_MAIL", max_length=100, null=True
                    ),
                ),
                ("dept_cd", models.CharField(db_column="DEPT_CD", max_length=20)),
                (
                    "dept_nm",
                    models.CharField(
                        blank=True, db_column="DEPT_NM", max_length=100, null=True
                    ),
                ),
                (
                    "dept_e_nm",
                    models.CharField(
                        blank=True, db_column="DEPT_E_NM", max_length=100, null=True
                    ),
                ),
                (
                    "dept_c_nm",
                    models.CharField(
                        blank=True, db_column="DEPT_C_NM", max_length=100, null=True
                    ),
                ),
                (
                    "title_cd",
                    models.CharField(
                        blank=True, db_column="TITLE_CD", max_length=20, null=True
                    ),
                ),
                (
                    "title_nm",
                    models.CharField(
                        blank=True, db_column="TITLE_NM", max_length=50, null=True
                    ),
                ),
                (
                    "title_e_nm",
                    models.CharField(
                        blank=True, db_column="TITLE_E_NM", max_length=50, null=True
                    ),
                ),
                (
                    "title_c_nm",
                    models.CharField(
                        blank=True, db_column="TITLE_C_NM", max_length=50, null=True
                    ),
                ),
                (
                    "degree_cd",
                    models.CharField(
                        blank=True, db_column="DEGREE_CD", max_length=20, null=True
                    ),
                ),
                (
                    "degree_nm",
                    models.CharField(
                        blank=True, db_column="DEGREE_NM", max_length=50, null=True
                    ),
                ),
                (
                    "degree_e_nm",
                    models.CharField(
                        blank=True, db_column="DEGREE_E_NM", max_length=50, null=True
                    ),
                ),
                (
                    "degree_c_nm",
                    models.CharField(
                        blank=True, db_column="DEGREE_C_NM", max_length=50, null=True
                    ),
                ),
                (
                    "job_cd",
                    models.CharField(
                        blank=True, db_column="JOB_CD", max_length=20, null=True
                    ),
                ),
                (
                    "job_nm",
                    models.CharField(
                        blank=True, db_column="JOB_NM", max_length=50, null=True
                    ),
                ),
                (
                    "job_e_nm",
                    models.CharField(
                        blank=True, db_column="JOB_E_NM", max_length=50, null=True
                    ),
                ),
                (
                    "job_c_nm",
                    models.CharField(
                        blank=True, db_column="JOB_C_NM", max_length=50, null=True
                    ),
                ),
                (
                    "duty_cd",
                    models.CharField(
                        blank=True, db_column="DUTY_CD", max_length=20, null=True
                    ),
                ),
                (
                    "duty_nm",
                    models.CharField(
                        blank=True, db_column="DUTY_NM", max_length=50, null=True
                    ),
                ),
                (
                    "duty_e_nm",
                    models.CharField(
                        blank=True, db_column="DUTY_E_NM", max_length=50, null=True
                    ),
                ),
                (
                    "duty_c_nm",
                    models.CharField(
                        blank=True, db_column="DUTY_C_NM", max_length=50, null=True
                    ),
                ),
                (
                    "hobong_cd",
                    models.CharField(
                        blank=True, db_column="HOBONG_CD", max_length=20, null=True
                    ),
                ),
                (
                    "hobong_nm",
                    models.CharField(
                        blank=True, db_column="HOBONG_NM", max_length=50, null=True
                    ),
                ),
                (
                    "title_sort",
                    models.IntegerField(blank=True, db_column="TITLE_SORT", null=True),
                ),
                (
                    "degree_sort",
                    models.IntegerField(blank=True, db_column="DEGREE_SORT", null=True),
                ),
                (
                    "job_sort",
                    models.IntegerField(blank=True, db_column="JOB_SORT", null=True),
                ),
                (
                    "duty_sort",
                    models.IntegerField(blank=True, db_column="DUTY_SORT", null=True),
                ),
                (
                    "hobong_sort",
                    models.IntegerField(blank=True, db_column="HOBONG_SORT", null=True),
                ),
                ("sort", models.IntegerField(blank=True, db_column="SORT", null=True)),
                (
                    "photo_url",
                    models.CharField(
                        blank=True, db_column="PHOTO_URL", max_length=300, null=True
                    ),
                ),
                (
                    "sign_url",
                    models.CharField(
                        blank=True, db_column="SIGN_URL", max_length=100, null=True
                    ),
                ),
                (
                    "com_cd",
                    models.CharField(
                        blank=True, db_column="COM_CD", max_length=20, null=True
                    ),
                ),
                (
                    "com_nm",
                    models.CharField(
                        blank=True, db_column="COM_NM", max_length=100, null=True
                    ),
                ),
                (
                    "com_e_nm",
                    models.CharField(
                        blank=True, db_column="COM_E_NM", max_length=100, null=True
                    ),
                ),
                (
                    "comp_tel",
                    models.CharField(
                        blank=True, db_column="COMP_TEL", max_length=50, null=True
                    ),
                ),
                (
                    "comp_fax",
                    models.CharField(
                        blank=True, db_column="COMP_FAX", max_length=50, null=True
                    ),
                ),
                (
                    "comp_post",
                    models.CharField(
                        blank=True, db_column="COMP_POST", max_length=10, null=True
                    ),
                ),
                (
                    "comp_address",
                    models.CharField(
                        blank=True, db_column="COMP_ADDRESS", max_length=200, null=True
                    ),
                ),
                (
                    "comp_e_address",
                    models.CharField(
                        blank=True,
                        db_column="COMP_E_ADDRESS",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "ent_date",
                    models.DateTimeField(blank=True, db_column="ENT_DATE", null=True),
                ),
                (
                    "prm_date",
                    models.DateTimeField(blank=True, db_column="PRM_DATE", null=True),
                ),
                (
                    "ret_date",
                    models.DateTimeField(blank=True, db_column="RET_DATE", null=True),
                ),
                (
                    "yr_continue",
                    models.CharField(
                        blank=True, db_column="YR_CONTINUE", max_length=20, null=True
                    ),
                ),
                (
                    "tel",
                    models.CharField(
                        blank=True, db_column="TEL", max_length=50, null=True
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, db_column="MOBILE", max_length=50, null=True
                    ),
                ),
                (
                    "mobile_addition",
                    models.CharField(
                        blank=True,
                        db_column="MOBILE_ADDITION",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "user_mask",
                    models.CharField(
                        blank=True, db_column="USER_MASK", max_length=50, null=True
                    ),
                ),
                (
                    "ad_fg",
                    models.CharField(
                        blank=True, db_column="AD_FG", max_length=1, null=True
                    ),
                ),
                (
                    "use_fg",
                    models.CharField(
                        blank=True, db_column="USE_FG", max_length=1, null=True
                    ),
                ),
                (
                    "hr_fg",
                    models.CharField(
                        blank=True, db_column="HR_FG", max_length=1, null=True
                    ),
                ),
                (
                    "it_fg",
                    models.CharField(
                        blank=True, db_column="IT_FG", max_length=1, null=True
                    ),
                ),
                (
                    "ins_date",
                    models.DateTimeField(blank=True, db_column="INS_DATE", null=True),
                ),
                (
                    "upd_date",
                    models.DateTimeField(blank=True, db_column="UPD_DATE", null=True),
                ),
                (
                    "pass_upd_date",
                    models.DateTimeField(
                        blank=True, db_column="PASS_UPD_DATE", null=True
                    ),
                ),
                (
                    "ad_upd_date",
                    models.DateTimeField(
                        blank=True, db_column="AD_UPD_DATE", null=True
                    ),
                ),
                (
                    "contents_fg",
                    models.CharField(
                        blank=True, db_column="CONTENTS_FG", max_length=1, null=True
                    ),
                ),
                (
                    "job_content",
                    models.CharField(
                        blank=True, db_column="JOB_CONTENT", max_length=1000, null=True
                    ),
                ),
                (
                    "skill_content",
                    models.CharField(
                        blank=True,
                        db_column="SKILL_CONTENT",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "introduction",
                    models.CharField(
                        blank=True, db_column="INTRODUCTION", max_length=1000, null=True
                    ),
                ),
                (
                    "weather_region_cd",
                    models.CharField(
                        blank=True,
                        db_column="WEATHER_REGION_CD",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "site_cd",
                    models.CharField(
                        blank=True, db_column="SITE_CD", max_length=3, null=True
                    ),
                ),
                (
                    "manager_id",
                    models.CharField(
                        blank=True, db_column="MANAGER_ID", max_length=20, null=True
                    ),
                ),
                (
                    "display_yn",
                    models.CharField(
                        blank=True, db_column="DISPLAY_YN", max_length=1, null=True
                    ),
                ),
                (
                    "msg_yn",
                    models.CharField(
                        blank=True, db_column="MSG_YN", max_length=1, null=True
                    ),
                ),
                (
                    "post",
                    models.CharField(
                        blank=True, db_column="POST", max_length=10, null=True
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="ADDRESS", max_length=200, null=True
                    ),
                ),
                (
                    "address_addition",
                    models.CharField(
                        blank=True,
                        db_column="ADDRESS_ADDITION",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "blog_address",
                    models.CharField(
                        blank=True, db_column="BLOG_ADDRESS", max_length=200, null=True
                    ),
                ),
                (
                    "fax",
                    models.CharField(
                        blank=True, db_column="FAX", max_length=30, null=True
                    ),
                ),
                (
                    "atd_target_yn",
                    models.CharField(
                        blank=True, db_column="ATD_TARGET_YN", max_length=1, null=True
                    ),
                ),
                (
                    "lync_sip",
                    models.CharField(
                        blank=True, db_column="LYNC_SIP", max_length=100, null=True
                    ),
                ),
                (
                    "cd_b_level",
                    models.CharField(
                        blank=True, db_column="CD_B_LEVEL", max_length=30, null=True
                    ),
                ),
                (
                    "ds_b_level",
                    models.CharField(
                        blank=True, db_column="DS_B_LEVEL", max_length=60, null=True
                    ),
                ),
                (
                    "cd_m_level",
                    models.CharField(
                        blank=True, db_column="CD_M_LEVEL", max_length=30, null=True
                    ),
                ),
                (
                    "ds_m_level",
                    models.CharField(
                        blank=True, db_column="DS_M_LEVEL", max_length=60, null=True
                    ),
                ),
                (
                    "level_detail",
                    models.CharField(
                        blank=True, db_column="LEVEL_DETAIL", max_length=500, null=True
                    ),
                ),
                (
                    "o365_yn",
                    models.CharField(
                        blank=True, db_column="O365_YN", max_length=1, null=True
                    ),
                ),
                (
                    "prohibit_quota",
                    models.IntegerField(
                        blank=True, db_column="PROHIBIT_QUOTA", null=True
                    ),
                ),
                (
                    "autodesk_id",
                    models.CharField(
                        blank=True, db_column="AUTODESK_ID", max_length=32, null=True
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        blank=True, db_column="UUID", max_length=32, null=True
                    ),
                ),
                (
                    "wfh_yn",
                    models.CharField(
                        blank=True, db_column="WFH_YN", max_length=1, null=True
                    ),
                ),
                (
                    "seat_txt",
                    models.CharField(
                        blank=True, db_column="SEAT_TXT", max_length=200, null=True
                    ),
                ),
            ],
            options={
                "db_table": "V_BASE_USER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VFilteredUserCertification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(db_column="USER_ID", max_length=20)),
                (
                    "emp_no",
                    models.CharField(
                        blank=True, db_column="EMP_NO", max_length=20, null=True
                    ),
                ),
                ("user_nm", models.CharField(db_column="USER_NM", max_length=50)),
                (
                    "user_e_nm",
                    models.CharField(
                        blank=True, db_column="USER_E_NM", max_length=100, null=True
                    ),
                ),
                (
                    "mail",
                    models.CharField(
                        blank=True, db_column="MAIL", max_length=100, null=True
                    ),
                ),
                ("dept_cd", models.CharField(db_column="DEPT_CD", max_length=20)),
                (
                    "dept_nm",
                    models.CharField(
                        blank=True, db_column="DEPT_NM", max_length=100, null=True
                    ),
                ),
                (
                    "title_cd",
                    models.CharField(
                        blank=True, db_column="TITLE_CD", max_length=20, null=True
                    ),
                ),
                (
                    "title_nm",
                    models.CharField(
                        blank=True, db_column="TITLE_NM", max_length=50, null=True
                    ),
                ),
                (
                    "degree_cd",
                    models.CharField(
                        blank=True, db_column="DEGREE_CD", max_length=20, null=True
                    ),
                ),
                (
                    "com_cd",
                    models.CharField(
                        blank=True, db_column="COM_CD", max_length=20, null=True
                    ),
                ),
                (
                    "com_nm",
                    models.CharField(
                        blank=True, db_column="COM_NM", max_length=100, null=True
                    ),
                ),
                (
                    "comp_tel",
                    models.CharField(
                        blank=True, db_column="COMP_TEL", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "db_table": "V_FILTERED_USER_CERTIFICATION",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UploadFileModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("files", models.FileField(null=True, upload_to="")),
            ],
        ),
    ]
